include_guard(DIRECTORY)

if(NOT ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_URL
   OR NOT ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_REPOSITORY_DIR
   OR NOT ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_VERSION)
  message(FATAL_ERROR "Protobuf port not declared.")
endif()

set(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_OPTIONS
    URL "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_URL}" REPO_DIRECTORY
    "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_REPOSITORY_DIR}" BRANCH
    "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_VERSION}")

project_third_party_try_patch_file(
  ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BASIC_PATCH_FILE "${CMAKE_CURRENT_LIST_DIR}" "protobuf"
  "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_VERSION}")

project_third_party_try_patch_file(
  ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_UPB_PATCH_FILE "${CMAKE_CURRENT_LIST_DIR}" "upb"
  "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_VERSION}")
set(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_PATCH_FILES)
if(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BASIC_PATCH_FILE
   AND EXISTS "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BASIC_PATCH_FILE}")
  list(APPEND ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_PATCH_FILES
       "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BASIC_PATCH_FILE}")
endif()
if(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_UPB_PATCH_FILE
   AND EXISTS "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_UPB_PATCH_FILE}")
  list(APPEND ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_PATCH_FILES
       "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_UPB_PATCH_FILE}")
endif()
if(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_PATCH_FILES)
  list(APPEND ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_OPTIONS PATCH_FILES
       ${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_PATCH_FILES})
endif()
if(ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_RESET_SUBMODULE_URLS)
  list(APPEND ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_OPTIONS RESET_SUBMODULE_URLS
       ${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_RESET_SUBMODULE_URLS})
endif()

project_git_clone_repository(${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_OPTIONS} ENABLE_SUBMODULE)

if(NOT EXISTS "${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_REPOSITORY_DIR}/.git")
  echowithcolor(
    COLOR
    RED
    "-- Dependency(${PROJECT_NAME}): Pull protobuf from ${ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_GIT_URL} failed"
  )
  message(FATAL_ERROR "Dependency(${PROJECT_NAME}): Protobuf is required")
endif()
