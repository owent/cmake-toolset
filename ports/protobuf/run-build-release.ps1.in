$PSDefaultParameterValues['*:Encoding'] = 'UTF-8'

$OutputEncoding = [System.Text.UTF8Encoding]::new()

$SCRIPT_DIR = Split-Path -Parent $MyInvocation.MyCommand.Definition

# Set-Location $SCRIPT_DIR

$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR@"
$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR@"

if (("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "true") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "yes") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "1") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "on")) {
    $ALLOW_PARALLEL_BUILD_FLAGS = $false
}
else {
    $ALLOW_PARALLEL_BUILD_FLAGS = $true
}

if ( "x@CMAKE_BUILD_TYPE@" -ne "x" ) {
    $FINAL_BUILD_TYPE = "@CMAKE_BUILD_TYPE@"
}
else {
    $FINAL_BUILD_TYPE = "Release"
}

# build host protoc first
if (("@CMAKE_CROSSCOMPILING@".ToLower() -eq "true") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "yes") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "1") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "on")) {
    $ENV:PATH = "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR" + [IO.Path]::PathSeparator + "$ENV:PATH"

    if (!(Test-Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR" )) {
        New-Item -Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR" -ItemType "directory" -Force
    }

    Set-Location "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_DIR"

    if (Test-Path "CMakeCache.txt") {
        Remove-Item -Force "CMakeCache.txt"
    }

    if (!(Test-Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin/protoc" ) -and !(Test-Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin/protoc.exe" )) {
        . "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_HOST_RESET_BUILD_ENVS_PWSH@"
        & @ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_BUILD_FLAGS_PWSH@ "-DCMAKE_INSTALL_PREFIX=@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" "-DPROJECT_THIRD_PARTY_HOST_INSTALL_DIR=@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@"
        if (("@MSVC@".ToLower() -ne "true") -or ("@MSVC@".ToLower() -ne "yes") -or ("@MSVC@".ToLower() -eq "1")) {
            if ($ALLOW_PARALLEL_BUILD_FLAGS) {
                if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Debug")) {
                    & "@CMAKE_COMMAND@" --build . --config Debug -j
                    & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" --config Debug
                }
                if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Release")) {
                    & "@CMAKE_COMMAND@" --build . --config Release -j
                    & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" --config Release
                }
            }
            else {
                if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Debug")) {
                    & "@CMAKE_COMMAND@" --build . --config Debug
                    & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" --config Debug
                }
                if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Release")) {
                    & "@CMAKE_COMMAND@" --build . --config Release
                    & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" --config Release
                }
            }
            if ( $LastExitCode -ne 0 ) {
                exit $LastExitCode
            }
        }
        if ( $LastExitCode -ne 0 ) {
            exit $LastExitCode
        }

        if ($ALLOW_PARALLEL_BUILD_FLAGS) {
            & "@CMAKE_COMMAND@" --build . --config "$FINAL_BUILD_TYPE" -j
        }
        else {
            & "@CMAKE_COMMAND@" --build . --config "$FINAL_BUILD_TYPE"
        }
        if (("@MSVC@".ToLower() -ne "true") -or ("@MSVC@".ToLower() -ne "yes") -or ("@MSVC@".ToLower() -eq "1")) {
            & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" --config "$FINAL_BUILD_TYPE"
        }
        else {
            & "@CMAKE_COMMAND@" --install . --prefix "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@"
        }

        if ( $LastExitCode -ne 0 ) {
            exit $LastExitCode
        }
        . "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_HOST_RESTORE_BUILD_ENVS_PWSH@"
    }

    $ENV:PATH = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin" + [IO.Path]::PathSeparator + "$ENV:PATH"
}
else {
    $ENV:PATH = "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR" + [IO.Path]::PathSeparator + "$ENV:PATH"
}

if (!(Test-Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR" )) {
    New-Item -Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR" -ItemType "directory" -Force
}

Set-Location "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_DIR"

if (Test-Path "CMakeCache.txt") {
    Remove-Item -Force "CMakeCache.txt"
}

if (("@CMAKE_CROSSCOMPILING@".ToLower() -eq "true") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "yes") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "1") -or ("@CMAKE_CROSSCOMPILING@".ToLower() -eq "on")) {
    & @ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_FLAGS_PWSH@ "-DCMAKE_INSTALL_PREFIX=@PROJECT_THIRD_PARTY_INSTALL_DIR@" "-DPROJECT_THIRD_PARTY_HOST_INSTALL_DIR=@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@" -Dprotobuf_BUILD_LIBPROTOC=ON -Dprotobuf_BUILD_PROTOC_BINARIES=OFF -Dprotobuf_BUILD_CONFORMANCE=OFF
}
else {
    & @ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_BUILD_FLAGS_PWSH@ "-DCMAKE_INSTALL_PREFIX=@PROJECT_THIRD_PARTY_INSTALL_DIR@" "-DPROJECT_THIRD_PARTY_HOST_INSTALL_DIR=@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@"
}

if (("@MSVC@".ToLower() -eq "true") -or ("@MSVC@".ToLower() -eq "yes") -or ("@MSVC@".ToLower() -eq "1")) {
    if ($ALLOW_PARALLEL_BUILD_FLAGS) {
        if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Debug")) {
            & "@CMAKE_COMMAND@" --build . --config Debug -j
            & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@" --config Debug
        }
        if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Release")) {
            & "@CMAKE_COMMAND@" --build . --config Release -j
            & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@" --config Release
        }
    }
    else {
        if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Debug")) {
            & "@CMAKE_COMMAND@" --build . --config Debug
            & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@" --config Debug
        }
        if (!(Test-Path ENV:ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_CI_MODE) -and ("$FINAL_BUILD_TYPE" -ne "Release")) {
            & "@CMAKE_COMMAND@" --build . --config Release
            & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@" --config Release
        }
    }

    if ( $LastExitCode -ne 0 ) {
        exit $LastExitCode
    }

    if ( $LastExitCode -ne 0 ) {
        exit $LastExitCode
    }

    if ($ALLOW_PARALLEL_BUILD_FLAGS) {
        & "@CMAKE_COMMAND@" --build . --config "$FINAL_BUILD_TYPE" -j
    }
    else {
        & "@CMAKE_COMMAND@" --build . --config "$FINAL_BUILD_TYPE"
    }
    & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@" --config "$FINAL_BUILD_TYPE"
}
else {
    if ($ALLOW_PARALLEL_BUILD_FLAGS) {
        & "@CMAKE_COMMAND@" --build . --config Release -j
    }
    else {
        & "@CMAKE_COMMAND@" --build . --config Release
    }
    & "@CMAKE_COMMAND@" --install . --prefix "@PROJECT_THIRD_PARTY_INSTALL_DIR@"
}


if (( $LastExitCode -eq 0 ) -and (Test-Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_REPOSITORY_DIR@/python/setup.py" )) {
    if ($IsWindows) {
        $ENV:PATH = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin;${ENV:PATH}"
    }
    else {
        $ENV:PATH = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/bin:${ENV:PATH}"
    }
    
    if (Test-Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/python") {
        Remove-Item -Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/python" -Recurse -Force
    }
    Copy-Item -Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_REPOSITORY_DIR@/python" -Destination "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@" -Force -Recurse
    Copy-Item -Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/include" -Destination "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/src" -Force -Recurse
    Set-Location "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/python"
    
    $PYTHON_BIN = "";
    if ( "x" -ne "x@PYTHON_EXECUTABLE@" ) {
        & "@PYTHON_EXECUTABLE@" --version
        if ( $LastExitCode -eq 0 ) {
            $PYTHON_BIN = "@PYTHON_EXECUTABLE@"
        }
    }

    if ( "x" -eq "x$PYTHON_BIN" ) {
        python3 --version
        if ( $LastExitCode -eq 0 ) {
            $PYTHON_BIN = "python3"
        }
    }
    if ( "x" -eq "x$PYTHON_BIN" ) {
        python --version
        if ( $LastExitCode -eq 0 ) {
            $PYTHON_BIN = "python"
        }
    }
    if ( "x" -ne "x$PYTHON_BIN" ) {
        & "$PYTHON_BIN" ./setup.py build_py
    }
    Remove-Item -Path "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_PROTOBUF_HOST_ROOT_DIR@/src" -Recurse -Force
}
