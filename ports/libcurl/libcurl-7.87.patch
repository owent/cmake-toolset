diff --git a/CMakeLists.txt b/CMakeLists.txt
index b435207..a269c60 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -521,8 +521,23 @@ function(CheckQuicSupportInOpenSSL)
   # Be sure that the OpenSSL library actually supports QUIC.
   if(NOT DEFINED HAVE_SSL_CTX_SET_QUIC_METHOD)
     cmake_push_check_state()
-    set(CMAKE_REQUIRED_INCLUDES   "${OPENSSL_INCLUDE_DIR}")
-    set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
+    if(NOT CMAKE_VERSION VERSION_LESS 3.4)
+      set(CMAKE_REQUIRED_LIBRARIES  OpenSSL::SSL OpenSSL::Crypto)
+    else()
+      set(CMAKE_REQUIRED_INCLUDES   "${OPENSSL_INCLUDE_DIR}")
+      set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
+    endif()
+    if(CMAKE_DL_LIBS)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_DL_LIBS})
+    endif()
+    if(TARGET Threads::Threads)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES Threads::Threads)
+    endif()
+    if(HAVE_LIBWS2_32)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES ws2_32)
+    elseif(HAVE_LIBSOCKET)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES socket)
+    endif()
     check_symbol_exists(SSL_CTX_set_quic_method "openssl/ssl.h" HAVE_SSL_CTX_SET_QUIC_METHOD)
     cmake_pop_check_state()
   endif()
@@ -610,7 +625,11 @@ if(NOT CURL_DISABLE_LDAP)
     check_include_file_concat("winldap.h" HAVE_WINLDAP_H)
   else()
     # Check for LDAP
-    set(CMAKE_REQUIRED_LIBRARIES ${OPENSSL_LIBRARIES})
+    if(NOT CMAKE_VERSION VERSION_LESS 3.4)
+      set(CMAKE_REQUIRED_LIBRARIES  OpenSSL::SSL OpenSSL::Crypto)
+    else()
+      set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
+    endif()
     check_library_exists_concat(${CMAKE_LDAP_LIB} ldap_init HAVE_LIBLDAP)
     check_library_exists_concat(${CMAKE_LBER_LIB} ber_init HAVE_LIBLBER)
 
@@ -1038,8 +1057,10 @@ endif()
 # Check for some functions that are used
 if(HAVE_LIBWS2_32)
   set(CMAKE_REQUIRED_LIBRARIES ws2_32)
+  list(APPEND CURL_LIBS ws2_32)
 elseif(HAVE_LIBSOCKET)
   set(CMAKE_REQUIRED_LIBRARIES socket)
+  list(APPEND CURL_LIBS socket)
 endif()
 
 check_symbol_exists(fchmod        "${CURL_INCLUDES}" HAVE_FCHMOD)
