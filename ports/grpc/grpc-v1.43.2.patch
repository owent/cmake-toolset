diff --git a/CMakeLists.txt b/CMakeLists.txt
index 303738d..5d36fb0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -85,6 +85,9 @@ set_property(CACHE gRPC_SSL_PROVIDER PROPERTY STRINGS "module" "package")
 set(gRPC_PROTOBUF_PROVIDER "module" CACHE STRING "Provider of protobuf library")
 set_property(CACHE gRPC_PROTOBUF_PROVIDER PROPERTY STRINGS "module" "package")
 
+set(gRPC_UPB_PROVIDER "module" CACHE STRING "Provider of upb library")
+set_property(CACHE gRPC_UPB_PROVIDER PROPERTY STRINGS "module" "package")
+
 set(gRPC_PROTOBUF_PACKAGE_TYPE "" CACHE STRING "Algorithm for searching protobuf package")
 set_property(CACHE gRPC_PROTOBUF_PACKAGE_TYPE PROPERTY STRINGS "CONFIG" "MODULE")
 
@@ -1431,7 +1434,7 @@ target_link_libraries(gpr
   absl::synchronization
   absl::time
   absl::optional
-  upb
+  ${_gRPC_UPB_LIBRARIES}
 )
 if(_gRPC_PLATFORM_ANDROID)
   target_link_libraries(gpr
@@ -3925,6 +3928,7 @@ endif()
 
 endif()
 
+if (gRPC_UPB_PROVIDER STREQUAL "module")
 add_library(upb
   third_party/upb/upb/decode_fast.c
   third_party/upb/upb/decode.c
@@ -3938,6 +3942,7 @@ add_library(upb
   src/core/ext/upb-generated/google/protobuf/descriptor.upb.c
   src/core/ext/upbdefs-generated/google/protobuf/descriptor.upbdefs.c
 )
+set_target_properties(upb PROPERTIES OUTPUT_NAME "grpc_upb")
 
 set_target_properties(upb PROPERTIES
   VERSION ${gRPC_CORE_VERSION}
@@ -3982,7 +3987,7 @@ if(gRPC_INSTALL)
   )
 endif()
 
-
+endif()
 
 add_executable(check_epollexclusive
   test/build/check_epollexclusive.c
diff --git a/cmake/gRPCConfig.cmake.in b/cmake/gRPCConfig.cmake.in
index 3623f4a..df6ced5 100644
--- a/cmake/gRPCConfig.cmake.in
+++ b/cmake/gRPCConfig.cmake.in
@@ -8,6 +8,7 @@ list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/modules)
 @_gRPC_FIND_CARES@
 @_gRPC_FIND_ABSL@
 @_gRPC_FIND_RE2@
+@_gRPC_FIND_UPB@
 
 # Targets
 include(${CMAKE_CURRENT_LIST_DIR}/gRPCTargets.cmake)
diff --git a/cmake/upb.cmake b/cmake/upb.cmake
index f2a0e50..bab661a 100644
--- a/cmake/upb.cmake
+++ b/cmake/upb.cmake
@@ -12,9 +12,17 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+set(_gRPC_UPB_GRPC_GENERATED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/core/ext/upb-generated" "${CMAKE_CURRENT_SOURCE_DIR}/src/core/ext/upbdefs-generated")
+if (gRPC_UPB_PROVIDER STREQUAL "module")
 set(UPB_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/third_party/upb)
 
 set(_gRPC_UPB_INCLUDE_DIR "${UPB_ROOT_DIR}")
 set(_gRPC_UPB_GRPC_GENERATED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/core/ext/upb-generated" "${CMAKE_CURRENT_SOURCE_DIR}/src/core/ext/upbdefs-generated")
 
 set(_gRPC_UPB_LIBRARIES upb)
+elseif(gRPC_UPB_PROVIDER STREQUAL "package")
+    find_package(upb CONFIG REQUIRED)
+    set(_gRPC_UPB_LIBRARIES upb::fastdecode upb::json upb::upb upb::utf8_range upb::textformat upb::reflection upb::descriptor_upb_proto)
+    set(_gRPC_UPB_INCLUDE_DIR)
+    set(_gRPC_FIND_UPB "if(NOT upb_FOUND)\n  find_package(upb CONFIG REQUIRED)\nendif()")
+endif()
diff --git a/src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc b/src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc
index 4aa11fd..cefb69a 100644
--- a/src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc
+++ b/src/core/ext/filters/client_channel/lb_policy/xds/xds_cluster_resolver.cc
@@ -139,7 +139,7 @@ class XdsClusterResolverLb : public LoadBalancingPolicy {
     // to use for LRS load reporting. Caller must ensure that config_ is set
     // before calling.
     std::pair<absl::string_view, absl::string_view> GetLrsClusterKey() const {
-      if (!parent_->is_xds_uri_) return {parent_->server_name_, nullptr};
+      if (!parent_->is_xds_uri_) return {parent_->server_name_, absl::string_view{}};
       return {
           parent_->config_->discovery_mechanisms()[index_].cluster_name,
           parent_->config_->discovery_mechanisms()[index_].eds_service_name};
diff --git a/third_party/upb/upb/text_encode.c b/third_party/upb/upb/text_encode.c
index 12840c0..39ce223 100644
--- a/third_party/upb/upb/text_encode.c
+++ b/third_party/upb/upb/text_encode.c
@@ -273,7 +273,7 @@ static void txtenc_map(txtenc *e, const upb_map *map, const upb_fielddef *f) {
   }
 }
 
-#define CHK(x) do { if (!(x)) { return false; } } while(0)
+#define CHK(x) do { if (!(x)) { return NULL; } } while(0)
 
 static const char *txtenc_parsevarint(const char *ptr, const char *limit,
                                       uint64_t *val) {
