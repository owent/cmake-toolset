$PSDefaultParameterValues['*:Encoding'] = 'UTF-8'

$OutputEncoding = [System.Text.UTF8Encoding]::new()

$SCRIPT_DIR = Split-Path -Parent $MyInvocation.MyCommand.Definition

Set-Location $SCRIPT_DIR

$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR = "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR@"

if (("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "true") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "yes") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "1") -or 
    ("@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_LOW_MEMORY_MODE@".ToLower() -eq "on")) {
    $ALLOW_PARALLEL_BUILD_FLAGS = $false
}
else {
    $ALLOW_PARALLEL_BUILD_FLAGS = $true
}

# build host grpc_cpp_plugin first
$ENV:PATH = "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR" + [IO.Path]::PathSeparator + "$ENV:PATH"

if (!(Test-Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR" )) {
    New-Item -Path "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR" -ItemType "directory" -Force
}

Set-Location "$ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_DIR"

if (Test-Path "CMakeCache.txt") {
    Remove-Item -Force "CMakeCache.txt"
}

if (!(Test-Path "@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@/bin/grpc_cpp_plugin" ) -and !(Test-Path "@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@/bin/grpc_cpp_plugin.exe" )) {
    . "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_HOST_RESET_BUILD_ENVS_PWSH@"
    & @ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_GRPC_HOST_BUILD_FLAGS_CMD@ "-DCMAKE_INSTALL_PREFIX=@PROJECT_THIRD_PARTY_HOST_INSTALL_DIR@"
    if (("@MSVC@".ToLower() -ne "true") -or ("@MSVC@".ToLower() -ne "yes") -or ("@MSVC@".ToLower() -eq "1")) {
        if ($ALLOW_PARALLEL_BUILD_FLAGS) {
            & "@CMAKE_COMMAND@" --build . --config Debug -j
        }
        else {
            & "@CMAKE_COMMAND@" --build . --config Debug
        }
        if ( $LastExitCode -ne 0 ) {
            exit $LastExitCode
        }
    }
    if ($ALLOW_PARALLEL_BUILD_FLAGS) {
        & "@CMAKE_COMMAND@" --build . --config Release -j
    }
    else {
        & "@CMAKE_COMMAND@" --build . --config Release
    }
    if ( $LastExitCode -ne 0 ) {
        exit $LastExitCode
    }
    if (("@CMAKE_BUILD_TYPE@" -ne "") -and ("@CMAKE_BUILD_TYPE@" -ne "Release")) {
        if ($ALLOW_PARALLEL_BUILD_FLAGS) {
            & "@CMAKE_COMMAND@" --build . --config "@CMAKE_BUILD_TYPE@" -j
        }
        else {
            & "@CMAKE_COMMAND@" --build . --config "@CMAKE_BUILD_TYPE@"
        }
    }
    if ( $LastExitCode -ne 0 ) {
        exit $LastExitCode
    }
    . "@ATFRAMEWORK_CMAKE_TOOLSET_THIRD_PARTY_HOST_RESTORE_BUILD_ENVS_PWSH@"
}
