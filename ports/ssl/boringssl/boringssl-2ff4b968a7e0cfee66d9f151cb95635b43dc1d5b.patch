diff --git a/CMakeLists.txt b/CMakeLists.txt
index 50e81c1a1..d4712f37e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -577,3 +577,10 @@ if(WIN32)
   target_link_libraries(crypto ws2_32)
 endif()
 
+include(GNUInstallDirs)
+install(TARGETS bssl crypto ssl
+  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+
+install(DIRECTORY src/include/ DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1529526b2..bfb56fcd8 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -140,7 +140,7 @@ if(CMAKE_COMPILER_IS_GNUCXX OR CLANG)
   # Note clang-cl is odd and sets both CLANG and MSVC. We base our configuration
   # primarily on our normal Clang one.
   # TODO(bbe) took out -Wmissing-field-initializers for pki - fix and put back or disable only for pki
-  set(C_CXX_FLAGS "-Werror -Wformat=2 -Wsign-compare -Wwrite-strings -Wvla -Wshadow -Wtype-limits")
+  set(C_CXX_FLAGS "-Wformat=2 -Wsign-compare -Wwrite-strings -Wvla -Wshadow -Wtype-limits")
   if(MSVC)
     # clang-cl sets different default warnings than clang. It also treats -Wall
     # as -Weverything, to match MSVC. Instead -W3 is the alias for -Wall.
@@ -211,8 +211,8 @@ elseif(MSVC)
       )
   string(REPLACE "C" " -wd" MSVC_DISABLED_WARNINGS_STR
                             ${MSVC_DISABLED_WARNINGS_LIST})
-  set(CMAKE_C_FLAGS   "-utf-8 -W4 -WX ${MSVC_DISABLED_WARNINGS_STR}")
-  set(CMAKE_CXX_FLAGS "-utf-8 -W4 -WX ${MSVC_DISABLED_WARNINGS_STR}")
+  set(CMAKE_C_FLAGS   "-utf-8 -W4 ${MSVC_DISABLED_WARNINGS_STR}")
+  set(CMAKE_CXX_FLAGS "-utf-8 -W4 ${MSVC_DISABLED_WARNINGS_STR}")
 endif()
 
 if(WIN32)
@@ -478,7 +478,7 @@ endif()
 
 # Add minimal googletest targets. The provided one has many side-effects, and
 # googletest has a very straightforward build.
-add_library(boringssl_gtest third_party/googletest/src/gtest-all.cc)
+add_library(boringssl_gtest STATIC third_party/googletest/src/gtest-all.cc)
 if(USE_CUSTOM_LIBCXX)
   target_link_libraries(boringssl_gtest libcxx)
 endif()
diff --git a/src/cmake/OpenSSLConfig.cmake b/src/cmake/OpenSSLConfig.cmake
index 3ebaf19ba..52bbe3755 100644
--- a/src/cmake/OpenSSLConfig.cmake
+++ b/src/cmake/OpenSSLConfig.cmake
@@ -10,17 +10,34 @@ macro(_openssl_config_libraries libraries target)
       list(APPEND ${libraries} ${_DEP})
     endif()
   endforeach()
-  get_property(_LOC TARGET ${target} PROPERTY LOCATION)
+  get_target_property(_IS_IMPORTED_TARGET ${target} IMPORTED)
+  if(_IS_IMPORTED_TARGET)
+    get_property(_LOC TARGET ${target} PROPERTY IMPORTED_LOCATION)
+    if(NOT _LOC)
+      get_property(_LOC TARGET ${target} PROPERTY IMPORTED_LOCATION_NOCONFIG)
+    endif()
+  else()
+    get_property(_LOC TARGET ${target} PROPERTY LOCATION)
+    if(NOT _LOC)
+      get_property(_LOC TARGET ${target} PROPERTY LOCATION_NOCONFIG)
+    endif()
+  endif()
   list(APPEND ${libraries} ${_LOC})
 endmacro()
 
 set(OPENSSL_FOUND YES)
 get_property(OPENSSL_INCLUDE_DIR TARGET OpenSSL::SSL PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
-get_property(OPENSSL_CRYPTO_LIBRARY TARGET OpenSSL::Crypto PROPERTY LOCATION)
+get_property(OPENSSL_CRYPTO_LIBRARY TARGET OpenSSL::Crypto PROPERTY IMPORTED_LOCATION)
+if(NOT OPENSSL_CRYPTO_LIBRARY)
+  get_property(OPENSSL_CRYPTO_LIBRARY TARGET OpenSSL::Crypto PROPERTY IMPORTED_LOCATION_NOCONFIG)
+endif()
 _openssl_config_libraries(OPENSSL_CRYPTO_LIBRARIES OpenSSL::Crypto)
 list(REMOVE_DUPLICATES OPENSSL_CRYPTO_LIBRARIES)
 
-get_property(OPENSSL_SSL_LIBRARY TARGET OpenSSL::Crypto PROPERTY LOCATION)
+get_property(OPENSSL_SSL_LIBRARY TARGET OpenSSL::Crypto PROPERTY IMPORTED_LOCATION)
+if(NOT OPENSSL_SSL_LIBRARY)
+  get_property(OPENSSL_SSL_LIBRARY TARGET OpenSSL::Crypto PROPERTY IMPORTED_LOCATION_NOCONFIG)
+endif()
 _openssl_config_libraries(OPENSSL_SSL_LIBRARIES OpenSSL::SSL)
 list(REMOVE_DUPLICATES OPENSSL_SSL_LIBRARIES)
 
